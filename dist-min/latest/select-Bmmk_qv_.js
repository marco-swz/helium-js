import{h as e,a as t,b as i}from"./utils-DoExkFin.js";const n=new CSSStyleSheet;n.replaceSync(':host {\n    --he-select-backgroundColor: whitesmoke;\n    --he-select-borderColor: lightgrey;\n    --he-select-borderWidth: 1px;\n    --he-select-borderRadius: 3px;\n    --he-select-hover-borderColor: grey;\n    --he-select-color: black;\n    --he-select-padding: 0.3rem 0.4rem;\n    --he-select-popover-borderRadius: 4px;\n    --he-select-option-hover-backgroundColor: whitesmoke;\n    --he-select-option-selected-backgroundColor: whitesmoke;\n    --he-select-after-margin: auto 4px auto auto;\n    --he-select-after-content: "â–¼";\n    --he-select-after-fontSize: 10px;\n    --he-select-disabled-color: hsl(from var(--he-select-color) h s calc(l + 50));\n\n    height: 1.8rem;\n    width: fit-content;\n    font-size: 14px;\n    min-width: 60px;\n    display: inline-block;\n}\n\n:host([disabled]) {\n    pointer-events: none;\n    color: var(--he-select-disabled-color);\n}\n\n:host([variant="underline"]) {\n    #inp {\n        border-top: 0;\n        border-left: 0;\n        border-right: 0;\n        border-radius: 0;\n    }\n}\n\n#inp {\n    position: relative;\n    background-color: var(--he-select-backgroundColor);\n    border-width: var(--he-select-borderWidth);\n    border-radius: var(--he-select-borderRadius);\n    border-color: var(--he-select-borderColor);\n    border-style: solid;\n    font-size: inherit;\n    width: 100%;\n    height: inherit;\n    min-width: inherit;\n    padding: var(--he-select-padding);\n    outline: none;\n    text-align: left;\n    padding-right: 25px;\n    text-wrap: nowrap;\n    color: inherit;\n}\n\n#inp:hover {\n    transition:\n        border-color 0.2s;\n    cursor: pointer;\n    border-color: var(--he-select-hover-borderColor);\n}\n\n#inp::after {\n    content: var(--he-select-after-content);\n    position: absolute;\n    font-size: var(--he-select-after-fontSize);\n    width: fit-content;\n    height: fit-content;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: var(--he-select-after-margin);\n}\n\n#popover {\n    inset: unset;\n    outline: none;\n    border: 1px solid grey;\n    border-radius: var(--he-select-popover-borderRadius);\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n    width: min-content;\n}\n\n#cont-options {\n    display: flex;\n    flex-direction: column;\n    background-color: var(--he-select-clr-bg, white);\n    max-height: 300px;\n    overflow: auto;\n    overscroll-behavior: contain;\n}\n\n#cont-options option {\n    padding: 5px 10px;\n    border-radius: 3px;\n    text-align: left;\n    width: 100%;\n    width: -moz-available;          /* WebKit-based browsers will ignore this. */\n    width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */\n    width: fill-available;\n}\n\n#cont-options option[selected] {\n    background-color: var(--he-select-option-selected-backgroundColor);\n}\n\n#cont-options option:hover:not(:disabled) {\n    background-color: var(--he-select-option-hover-backgroundColor);\n    cursor: pointer;\n}\n\n#filter {\n    width: 100%;\n    min-width: 50px;\n}\n\n');class o extends HTMLElement{static formAssociated=!0;static observedAttributes=["open","filter","disabled"];$popover;$filter;$options;$input;internals;_filterTimeout=0;ignoreAttributes=!1;constructor(){super();let e=this.attachShadow({mode:"open"});this.internals=this.attachInternals(),this.$popover=document.createElement("div"),this.$popover.id="popover",this.$popover.popover="",this.$popover.addEventListener("beforetoggle",(e=>this._beforetoggledPopoverCallback.bind(this)(e))),this.$popover.addEventListener("toggle",(e=>this._toggledPopoverCallback.bind(this)(e))),this.$filter=document.createElement("he-input"),this.$filter.id="filter",this.$filter.style.display="none",this.$filter.onkeyup=()=>this._changedFilterCallback.bind(this)(),this.$input=document.createElement("button"),this.$input.id="inp",this.$options=document.createElement("div"),this.$options.id="cont-options",this.$options.slot="content",this.$popover.append(this.$options),e.append(this.$popover),e.adoptedStyleSheets=[n]}set disabled(e){e?this.setAttribute("disabled",!0):this.removeAttribute("disabled")}get disabled(){return null!==this.getAttribute("disabled")}set filter(e){e?this.setAttribute("filter",!0):this.removeAttribute("filter")}get filter(){return null!==this.getAttribute("filter")}set name(e){e?this.setAttribute("name",e):this.removeAttribute("name")}get name(){return this.getAttribute("name")}set open(e){e?this.$popover.showPopover():this.$popover.hidePopover()}get open(){return null!==this.getAttribute("open")}set value(e){if(e){const t=this.$options.querySelector(`[value="${e}"]`);if(null==t)throw new Error("No option found with provided value!");this._select(t)}}get value(){return this.$selection?this.$selection.value:""}attributeChangedCallback(e,t,i){if(!this.ignoreAttributes)switch(e){case"open":i?this.$popover.showPopover():this.$popover.hidePopover();break;case"filter":this.$filter.style.display=null==i||"false"===i?"none":"";break;case"disabled":i?this.internals.setFormValue(null):this.internals.setFormValue(this.value)}}checkValidity(){return!0}connectedCallback(){if("inline"===this.getAttribute("filter"))this.shadowRoot.append(this.filter),this.$filter.setAttribute("popovertarget","popover");else this.$input.setAttribute("popovertarget","popover"),this.$popover.prepend(this.$filter),this.shadowRoot.append(this.$input);for(const e of this.querySelectorAll("option"))e.onclick=e=>this._clickedOptionCallback.bind(this)(e),this.$options.append(e);this.select(0),this.hasAttribute("open")&&(this.open=!0)}formResetCallback(){let e=null;for(const t of this.$options.children)if(!t.hidden&&!t.disabled){e=t;break}if(null==e)return this.$input.innerHTML="",void this.internals.setFormValue(null);this._select(e)}getOptions(){return this.$options.children}hideOptions(e=null){let t=null;for(let i of this.$options.children)null==e||e.includes(i.value)?i.hidden=!0:(i.hidden=!1,null==t&&(t=i));return null==t?(this.$input.innerHTML="",this.internals.setFormValue(null)):this._select(t),this}replaceOptions(e,t=null){t=t??{},this.$options.innerHTML="";const i=this.value;let n=null;for(const o of e){let e=document.createElement("option");e.value=o,e.innerHTML=t[o]??o,e.onclick=e=>this._clickedOptionCallback.bind(this)(e),this.$options.append(e),i===o&&(n=e)}return null!=n?this._select(n):this.select(0),this}showOptions(e=null){let t=null;for(let i of this.$options.children)(null==e||e.includes(i.value))&&(i.hidden=!1,null==t&&(t=i));return t=this.$selection??t,null!=t&&this._select(t),this}select(e){if(0===this.$options.children.length&&0===e)return;const t=this.$options.children[e];console.assert(null!=t,`No option with the given index ${e}!`),this._select(t)}toggle(){this.$popover.togglePopover()}_beforetoggledPopoverCallback(e){this.ignoreAttributes=!0,"open"===e.newState?(this.$popover.style.visibility="hidden",this.setAttribute("open",!0)):this.removeAttribute("open"),this.ignoreAttributes=!1}_changedFilterCallback(){window.clearTimeout(this._filterTimeout),this._filterTimeout=setTimeout((()=>{let e=this.$filter.value;e&&e.toLowerCase();for(const t of this.$options.children)0===e.length||""!==t.value&&t.innerText.toLowerCase().includes(e)?t.style.display="":t.style.display="none"}),500)}_select(e){this.$input.innerHTML=e.innerHTML,null!=this.$selection&&this.$selection.removeAttribute("selected"),this.$selection=e,this.$selection.setAttribute("selected",""),this.disabled||this.internals.setFormValue(this.$selection.value)}_toggledPopoverCallback(n){if("open"===n.newState){let i="bottom-left";e(this)<this.$popover.offsetHeight+20&&(i="top-left");const n=this.getAttribute("position")??i;t(this.$popover,this.$input,n,3);const o=7;this.$popover.offsetWidth<this.$input.offsetWidth-o&&(this.$popover.style.width=this.$input.offsetWidth-7+"px"),this.$popover.style.visibility="",this.$filter.focus()}else{this.$filter.value="";for(const e of this.$options.children)e.style.display="";i()}}_clickedOptionCallback(e){this.open=!1;const t=e.currentTarget;this._select(t),this.dispatchEvent(new CustomEvent("change"))}}customElements.get("he-select")||customElements.define("he-select",o);export{o as HeliumSelect};
