const t=new CSSStyleSheet;t.replaceSync(':host {\n    --he-button-loading-cursor: default;\n    --he-button-hover-cursor: pointer;\n    --he-button-disabled-cursor: not-allowed;\n    --he-button-borderWidth: 0.1rem;\n    --he-button-font-size: 14px;\n    --he-button-height: 35px;\n    --he-button-width: fit-content;\n\n    --he-button-color: black;\n    --he-button-backgroundColor: white;\n    --he-button-hover-backgroundColor: hsl(240 4.8% 95.9%);\n    --he-button-hover-color: black;\n    --he-button-borderColor: hsl(240 4.9% 83.9%);\n    --he-button-hover-borderColor: var(--he-button-borderColor);\n\n    --he-theme-color: var(--he-accent-color, steelblue);\n    --he-theme-bright1-color: hsl(from var(--he-theme-color) h s calc(l + 10));\n    --he-theme-contrast: white;\n\n    display: inline-block;\n    text-wrap: nowrap;\n    border-radius: 3px;\n    outline-style: none;\n    box-shadow: none !important;\n    width: var(--he-button-width);\n    min-width: var(--he-button-minWidth);\n}\n\n:host([theme=danger]) {\n    --he-theme-color: hsl(0 72.2% 50.6%);\n    --he-theme-bright1-color: hsl(from var(--he-theme-color) h s calc(l + 10));\n    --he-theme-contrast: white;\n}\n\n:host([theme=warning]) {\n    --he-theme-color: hsl(32.1 94.6% 43.7%);\n    --he-theme-bright1-color: hsl(from var(--he-theme-color) h s calc(l + 10));\n    --he-theme-contrast: white;\n}\n\n:host([theme=success]) {\n    --he-theme-color: hsl(142.1 76.2% 36.3%);\n    --he-theme-bright1-color: hsl(from var(--he-theme-color) h s calc(l + 10));\n    --he-theme-contrast: white;\n}\n\n:host([theme][variant]), \n:host([theme]) {\n    --he-button-color: var(--he-theme-color);\n    --he-button-hover-color: var(--he-theme-contrast);\n    --he-button-backgroundColor: var(--he-theme-contrast);\n    --he-button-hover-backgroundColor: var(--he-theme-color);\n    --he-button-borderColor: var(--he-theme-color);\n    --he-button-hover-borderColor: var(--he-theme-color);\n}\n\n:host([variant=primary]), :host([variant=primary][theme]) {\n    --he-button-color: var(--he-theme-contrast);\n    --he-button-hover-color: var(--he-theme-contrast);\n    --he-button-backgroundColor: var(--he-theme-color);\n    --he-button-hover-backgroundColor: var(--he-theme-bright1-color);\n    --he-button-borderColor: var(--he-theme-color);\n    --he-button-hover-borderColor: var(--he-theme-bright1-color);\n}\n\n:host([variant=ghost]) {\n    --he-button-borderColor: white;\n    --he-button-hover-borderColor: var(--he-button-hover-backgroundColor);\n}\n:host([variant=ghost][theme]) {\n    --he-button-color: var(--he-theme-color);\n    --he-button-hover-color: var(--he-theme-contrast);\n    --he-button-backgroundColor: var(--he-theme-contrast);\n    --he-button-hover-backgroundColor: var(--he-theme-color);\n    --he-button-borderColor: var(--he-theme-contrast);\n    --he-button-hover-borderColor: var(--he-theme-color);\n}\n\na {\n    width: inherit;\n    cursor: inherit;\n    padding: inherit;\n    border-radius: inherit;\n    outline-style: inherit;\n    box-shadow: inherit;\n    text-shadow: inherit;\n    min-width: inherit;\n}\n\n#he-button {\n    position: relative;\n    border-radius: inherit;\n    padding: inherit;\n    vertical-align: middle;\n    text-align: center;\n    font-size: var(-he-button-fontSize);\n    background-color: var(--he-button-backgroundColor);\n    outline-style: inherit;\n    box-shadow: inherit;\n    text-shadow: inherit;\n    cursor: inherit;\n    color: var(--he-button-color);\n    height: var(--he-button-height);\n    border-width: var(--he-button-borderWidth);\n    border-style: solid;\n    border-color: var(--he-button-borderColor);\n    padding: 0px 10px;\n    font-weight: 600;\n    width: inherit;\n    overflow: hidden;\n    min-width: inherit;\n}\n\n:host([disabled]) #he-button {\n    opacity: 0.5;\n    cursor: var(--he-button-disabled-cursor);\n}\n\n:host(:not([loading]):not([disabled]):hover) #he-button {\n    transition:\n        background-color 0.2s,\n        border-color 0.2s,\n        color 0.2s;\n    background-color: var(--he-button-hover-backgroundColor);\n    border-color: var(--he-button-hover-borderColor);\n    cursor: var(--he-button-hover-cursor);\n    color: var(--he-button-hover-color);\n}\n\n:host(:not([loading]):not([disabled]):active) #he-button {\n    animation: inset-anim 0.15s 1 ease-in-out;\n}\n\n:host([loading]) #he-button {\n    opacity: 0.5;\n    cursor: var(--he-button-loading-cursor);\n}\n\n:host([loading]) #he-button::after {\n    content: "";\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: auto;\n    border: 4px solid transparent;\n    border-top-color: var(--he-button-spinner-color, black);\n    border-radius: 50%;\n    animation: button-loading-spinner 1s ease infinite;\n}\n\n:host([ok]) #he-button::after {\n    content: "";\n    position: absolute;\n    width: 16px;\n    height: 16px;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: auto;\n    border: 4px solid transparent;\n    border-bottom-color: var(--he-button-spinner-color, black);\n    border-right-color: var(--he-button-spinner-color, black);\n    transform: rotate(45deg);\n}\n\n@keyframes button-loading-spinner {\n    from {\n        transform: rotate(0turn);\n    }\n\n    to {\n        transform: rotate(1turn);\n    }\n}\n\n@keyframes inset-anim {\n    0% {\n        box-shadow: inset 0 0 0 0 hsl(from var(--he-button-hover-backgroundColor) h s l);\n    }\n    50% {\n        box-shadow: inset 0 0 10px 0 hsl(from var(--he-button-hover-backgroundColor) h s calc(l - 10));\n    }\n    100% {\n        box-shadow: inset 0 0 0 0 hsl(from var(--he-button-hover-backgroundColor) h s l);\n    }\n}\n');class e extends HTMLElement{static observedAttributes=["theme","variant","popovertarget","popovertargetaction","form","formtarget","formenctype","formmethod","formnovalidate","show-dialog","close-dialog","submit","he-input-invalid","disabled","href"];$button;$anchor;listenerClick=null;slotCount=0;constructor(){super();let e=this.attachShadow({mode:"open"});this.$anchor=document.createElement("a"),this.$button=document.createElement("button"),this.$button.id="he-button",this.$anchor.append(this.$button),e.append(this.$anchor),e.adoptedStyleSheets=[t]}set disabled(t){t?this.setAttribute("disabled",!0):this.removeAttribute("disabled")}get disabled(){return null!=this.getAttribute("disabled")}set loading(t){t?this.setAttribute("loading",!0):this.removeAttribute("loading")}get loading(){return null!=this.getAttribute("loading")}set theme(t){t?this.setAttribute("theme",t):this.removeAttribute("theme")}get theme(){return this.getAttribute("theme")}set variant(t){t?this.setAttribute("variant",t):this.removeAttribute("variant")}get variant(){return this.getAttribute("variant")}attributeChangedCallback(t,e,o){switch(t){case"show-dialog":this.removeEventListener("click",this._showDialog),null!==o&&(this.listenerClick=this.addEventListener("click",this._showDialog));break;case"close-dialog":this.removeEventListener("click",this._hideDialog),null!==o&&(this.listenerClick=this.addEventListener("click",this._closeDialog()));break;case"submit":this.addEventListener("click",(()=>this._submitForm()));break;case"he-input-invalid":this.disabled=!!o;break;case"disabled":o?this.$button.setAttribute("disabled",!0):this.$button.removeAttribute("disabled");break;case"href":o?this.$anchor.setAttribute(t,o):this.$anchor.removeAttribute(t);break;default:null===o||"false"===o?this.$button.removeAttribute(t):this.$button.setAttribute(t,o)}}connectedCallback(){this.$button.textContent=this.textContent;for(let t of this.children){if(t.hasAttribute("slotted")){let e=document.createElement("slot");const o="slot"+this.slotCount++;t.slot=o,e.name=o,this.button.append(e)}else this.$button.append(t)}this.onload&&this.onload()}setText(t){if(this.slotCount>0)throw Error("The button text cannot be set when using the `slotted` attribute!");this.$button.innerHTML=t}_closeDialog(){document.querySelectorAll(this.getAttribute("close-dialog")).forEach((t=>t.close()))}_submitForm(){const t=this.getAttribute("submit"),e=document.querySelector(t);console.assert(null==e,`No form found with ID ${t}`),console.assert("FORM"===e.nodeName,"The element is not a form!"),e.submit()}_showDialog(){document.querySelectorAll(this.getAttribute("show-dialog")).forEach((t=>t.showModal()))}}customElements.get("he-button")||customElements.define("he-button",e);export{e as HeliumButton};
