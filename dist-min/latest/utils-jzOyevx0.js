function t(t){const e=t.getBoundingClientRect();return window.innerHeight-e.bottom}function e(t,e,o,n=0){const i=e.getBoundingClientRect();switch(o){case"bottom-right":t.style.left=i.left+i.width-t.offsetWidth+"px",t.style.top=i.bottom+n+"px";break;case"bottom-left":t.style.left=i.left+"px",t.style.top=i.bottom+n+"px";break;case"top-right":t.style.top="",t.style.left=i.left+i.width-t.offsetWidth+"px",t.style.top=i.top-t.offsetHeight-n+"px";break;case"top-right":t.style.top="",t.style.left=i.left+"px",t.style.top=i.top-t.offsetHeight-n+"px";break;case"offscreen":t.style.left="-10000px";break;default:throw new Error("Invalid position")}}function o(){document.body.style.position="static",document.body.style.overflowY="auto",document.body.style.overflowX="auto"}function n(t,e){const o=o=>{let l=!1;for(const e of t)if(i(e,o.clientX,o.clientY)){l=!0;break}l||(n(),e())},n=()=>{document.removeEventListener("click",o)};document.addEventListener("click",o)}function i(t,e,o){const n=t.getBoundingClientRect();let i=e>n.left&&e<n.left+n.width;return i=i&&o>n.top&&o<n.top+n.height,i}export{n as a,e as b,o as c,t as h};
