import{h as e,a as t}from"./utils-RA_86-hs.js";import"./popover-BtSr2gHM.js";const n=new CSSStyleSheet;n.replaceSync(':host {\n    --he-select-backgroundColor: whitesmoke;\n    --he-select-borderColor: lightgrey;\n    --he-select-borderWidth: 1px;\n    --he-select-borderRadius: 3px;\n    --he-select-hover-borderColor: grey;\n    --he-select-color: black;\n    --he-select-padding: 0.3rem 0.4rem;\n    --he-select-popover-borderRadius: 4px;\n    --he-select-popover-maxHeight: 300px;\n    --he-select-popover-maxWidth: 300px;\n    --he-select-popover-width: fit-content;\n    --he-select-popover-backgroundColor: white;\n    --he-select-option-hover-backgroundColor: whitesmoke;\n    --he-select-option-selected-backgroundColor: whitesmoke;\n    --he-select-after-margin: auto 4px auto auto;\n    --he-select-after-content: "â–¼";\n    --he-select-after-fontSize: 10px;\n    --he-select-after-display: block;\n    --he-select-after-padding: 0px 2px 0px 5px;\n    --he-select-disabled-color: hsl(from var(--he-select-color) h s calc(l + 50));\n    --he-select-before-color: black;\n    --he-select-before-content: \'\';\n    --he-select-before-fontFamily: \'Font Awesome 5 Pro\';\n    --he-select-before-display: \'none\';\n    --he-select-before-fontSize: 10px;\n    --he-select-before-padding: 0;\n\n    height: 1.6rem;\n    font-size: 14px;\n    min-width: 150px;\n    width: 150px;\n    display: inline-block;\n}\n\n:host([disabled]), \n:host([disabled])::slotted([slot=button]) {\n    pointer-events: none;\n    color: var(--he-select-disabled-color);\n}\n\n:host([variant="underline"]) {\n    & #inp {\n        border-top: 0;\n        border-left: 0;\n        border-right: 0;\n        border-radius: 0;\n    }\n}\n\n#cont-button {\n    height: inherit;\n    width: inherit;\n    display: flex;\n    align-items: center;\n    background-color: var(--he-select-backgroundColor);\n    border-width: var(--he-select-borderWidth);\n    border-radius: var(--he-select-borderRadius);\n    border-color: var(--he-select-borderColor);\n    border-style: solid;\n    padding: 0;\n\n    &::before {\n        content: var(--he-select-before-content);\n        color: var(--he-select-before-color);\n        font-family: var(--he-select-before-fontFamily);\n        font-size: var(--he-select-before-fontSize);\n        display: var(--he-select-before-display);\n        padding: var(--he-select-before-padding);\n    }\n\n    &::after {\n        content: var(--he-select-after-content);\n        font-size: var(--he-select-after-fontSize);\n        display: var(--he-select-after-display);\n        margin: var(--he-select-after-margin);\n        padding: var(--he-select-after-padding);\n    }\n}\n\n#inp {\n    position: relative;\n    font-size: inherit;\n    border-radius: var(--he-select-borderRadius);\n    width: 100%;\n    height: inherit;\n    min-width: inherit;\n    outline: none;\n    text-align: left;\n    padding: var(--he-select-padding);\n    background-color: var(--he-select-backgroundColor);\n    text-wrap: nowrap;\n    border: 0;\n    color: inherit;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    align-items: center;\n}\n\n#inp:hover {\n    transition:\n        border-color 0.2s;\n    cursor: pointer;\n    border-color: var(--he-select-hover-borderColor);\n}\n\n#popover-content {\n    width: min-content;\n    border-radius: var(--he-select-popover-borderRadius);\n}\n\n#cont-options {\n    display: flex;\n    flex-direction: column;\n    background-color: var(--he-select-popover-backgroundColor);\n    max-height: var(--he-select-popover-maxHeight);\n    width: var(--he-select-popover-width);\n    overflow: auto;\n    overscroll-behavior: contain;\n    user-select: none;\n}\n\nslot[name=option] {\n    display: inline-flex;\n    flex-direction: column;\n}\n\nslot[name=button] {\n    display: flex;\n    align-items: center;\n    height: 100%;\n}\n\n#cont-options option,\n::slotted(*) {\n    padding: 5px 10px;\n    border-radius: 3px;\n    text-align: left;\n    width: 100%;\n    width: -moz-available;          /* WebKit-based browsers will ignore this. */\n    width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */\n    width: fill-available;\n    display: inline-block;\n    align-items: center;\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n\n#cont-options option[selected]::before,\n::slotted([slot=option][selected])::before {\n    font-family: "Font Awesome 5 Pro";\n    content: "\\f00c";\n    font-weight: 600;\n    margin-right: 6px;\n    color: steelblue;\n}\n\n#cont-options:not(:hover) option[highlighted],\n#cont-options:not(:hover) ::slotted([slot=option][highlighted]) {\n    background-color: var(--he-select-option-selected-backgroundColor);\n}\n\n#cont-options option:hover:not(:disabled),\n::slotted([slot=option]:hover:not(:disabled))\n{\n    background-color: var(--he-select-option-hover-backgroundColor);\n    cursor: pointer;\n}\n\n#filter {\n    width: 100%;\n    width: -moz-available;          /* WebKit-based browsers will ignore this. */\n    width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */\n    width: fill-available;\n    margin: 3px;\n}\n\n:host([filter="inline"]) {\n    & #filter {\n        --he-input-padding: 0;\n        padding: var(--he-select-padding);\n        border: 0;\n        font-size: inherit;\n        width: 100%;\n        margin: 0;\n        min-width: inherit;\n        border-radius: var(--he-select-borderRadius);\n        background-color: var(--he-select-backgroundColor);\n        outline: none;\n        text-align: left;\n        text-wrap: nowrap;\n        color: inherit;\n    }\n}\n\n:host([multiple]) {\n    --he-select-padding: 3px 15px;\n\n    & #cont-button {\n        & #inp {\n            display: flex;\n            gap: 3px;\n            & span:not(.placeholder) {\n                display: inline-table;\n                align-items: center;\n                border: 1px solid lightgrey;\n                border-radius: 5px;\n                padding: 2px 5px;\n                background-color: white;\n                overflow: hidden;\n                width: fit-content;\n                text-overflow: ellipsis;\n            }\n\n            & span.placeholder {\n                color: grey;\n            }\n        }\n    }\n}\n\n');class i extends HTMLElement{static formAssociated=!0;static observedAttributes=["open","filter","disabled","placeholder"];$popover;$popoverContent;$filter;$options;selections=[];$button;$contButton;internals;onfilter=this._onfilterDefault;_filterTimeout=0;_handleClickDocument;constructor(){super();let e=this.attachShadow({mode:"open"});this.internals=this.attachInternals(),this.$contButton=document.createElement("div"),this.$contButton.id="cont-button",e.append(this.$contButton),this.$popover=document.createElement("he-popover"),this.$popover.id="popover",this.$popover.dismiss="manual",this.$popover.$anchor=this.$contButton,this.$popoverContent=document.createElement("div"),this.$popoverContent.id="popover-content",this.$popoverContent.slot="content",this.$popover.append(this.$popoverContent),this.$filter=document.createElement("he-input"),this.$filter.id="filter",this.$filter.style.display="none",this.$filter.oninput=e=>this._handleChangeFilter.bind(this)(e),this.$button=document.createElement("button"),this.$button.id="inp",this.$button.onclick=()=>{this.open=!0},this.$contButton.append(this.$button),this.$options=document.createElement("div"),this.$options.id="cont-options",this.$popoverContent.append(this.$options),this.onkeydown=e=>this._handleKeydown(e),e.append(this.$popover),e.adoptedStyleSheets=[n]}set disabled(e){e?this.setAttribute("disabled",!0):this.removeAttribute("disabled")}get disabled(){return null!==this.getAttribute("disabled")}set filter(e){e?this.setAttribute("filter",!0):this.removeAttribute("filter")}get filter(){return null!==this.getAttribute("filter")}set name(e){e?this.setAttribute("name",e):this.removeAttribute("name")}get name(){return this.getAttribute("name")}set open(e){e?this.setAttribute("open",""):this.removeAttribute("open")}get open(){return null!==this.getAttribute("open")}set placeholder(e){e?this.setAttribute("placeholder",e):this.removeAttribute("placeholder")}get placeholder(){return this.getAttribute("placeholder")}set value(e){if(null==e)return;if(Array.isArray(e)){if(null==this.getAttribute("multiple"))throw new Error("Multiple values are not allowed unless the select has the attribute `multiple`")}else e=[e];if(this.hasAttribute("slotted")){let t=this.$options.children[0].assignedNodes().filter((t=>e.includes(t.getAttribute("value"))));if(0===t.length)throw new Error("No option found with provided value!");return void this._select(t)}let t=[];for(const n of e){let e=this.$options.querySelector(`[value="${n}"]`);if(null==e)throw new Error("No option found with provided value!");t.push(e)}this._select(t)}get value(){let e=this.selections.map((e=>e.value??e.getAttribute("value")));switch(e.length){case 0:return"";case 1:return e[0]}return e}addOption(e,t,n=null){let i=document.createElement("option");i.value=t,i.innerHTML=e;let o=this;if(this.hasAttribute("slotted")?i.slot="option":(o=this.$options,i.onclick=e=>this._handleClickOption.bind(this)(e)),null==n)return o.append(i),i;for(const e of o.children)if(n(e,i))return o.insertBefore(i,e),i}attributeChangedCallback(e,t,n){switch(e){case"open":null!=n?this._showPopover():this._hidePopover();break;case"filter":this.$filter.style.display=null==n||"false"===n?"none":"";break;case"disabled":null!=n?this.internals.setFormValue(null):this.internals.setFormValue(this.value)}}checkValidity(){return!0}connectedCallback(){if("inline"===this.getAttribute("filter"))this.$contButton.append(this.$filter),this.$filter.style.display="none";else this.$popoverContent.prepend(this.$filter);if(this.hasAttribute("slotted")){let e=document.createElement("slot");e.name="option",e.addEventListener("slotchange",(e=>this._handleSlotchange(e))),this.$options.append(e),e=document.createElement("slot"),e.name="button",this.$button.append(e)}else for(let e of this.querySelectorAll("option"))e.onclick=e=>this._handleClickOption.bind(this)(e),this.$options.append(e);this.select(0),this.hasAttribute("open")&&(this.open=!0)}formResetCallback(){this._select([])}getOptions(){return this.hasAttribute("slotted")?this.$options.children[0].assignedNodes():this.$options.children}hideOptions(e=null){for(let t of this.getOptions())null==e||e.includes(t.value)?t.style.display="none":t.style.display="";return this._select(this.selections),this}nextOption(e=!1){this._moveOption(e,1)}_moveOption(e,t){if(!e&&this.getAttribute("multiple"))return;let n=e?this.$highlight:this.selections[0],i=this.getOptions();if(0===i.length)return;if(!n)return void(e?this._highlight(i[0]):this._select([i[0]]));let o=Array.prototype.indexOf.call(i,n),s=n;for(;i.length>1;)if(o+=t,s=i[o],null!=s){if(n.isSameNode(s))return;if("none"!==s.style.display)break}else o=t>0?-1:i.length;e?this._highlight(s):this._select([s])}prevOption(e=!1){this._moveOption(e,-1)}replaceOptions(e,t=null){this.hasAttribute("slotted")?this.innerHTML="":this.$options.innerHTML="",t=t??{};for(const n of e)this.addOption(t[n]??n,n);return this._select(this.selections),this}reset(){this.formResetCallback()}showOptions(e=null){for(let t of this.getOptions())(null==e||e.includes(t.value))&&(t.style.display="");return this._select(this.selections),this}select(e){let t=this.getOptions();if(0===t.length&&0===e)return;const n=t[e];console.assert(null!=n,`No option with the given index ${e}!`),this._select([n])}toggle(){return this.$popover.togglePopover(),this}_handleChangeFilter(){window.clearTimeout(this._filterTimeout),this._filterTimeout=setTimeout((()=>{let e=this.$filter.value,t=null,n=this.getOptions();for(const i of n)this.onfilter(e,i)?(null==t&&(t=i),i.style.display=""):i.style.display="none";this._highlight(t)}),250)}_onfilterDefault(e,t){e.toLowerCase();let n=t.value??t.getAttribute("value");return 0===e.length||""!==n&&t.innerText.toLowerCase().includes(e)}_handleClickOption(e){const t=e.currentTarget;if(this.hasAttribute("multiple")){let e=[],n=!1;for(let i of this.selections)i.isSameNode(t)?n=!0:e.push(i);n||e.push(t),this._select(e)}else this.open=!1,this._select([t]);this.dispatchEvent(new CustomEvent("change"))}_handleKeydown(e){switch(e.key){case"ArrowDown":e.preventDefault(),this.nextOption(!0);break;case"ArrowUp":e.preventDefault(),this.prevOption(!0);break;case"Enter":if(this.open){e.preventDefault();let t=this.$highlight,n=this.$filter.value;this.hasAttribute("create-new")&&""!==n&&this.$highlight.innerHTML!==n&&(t=this.addOption(n,"#@+"+n,((e,t)=>t.innerText.localeCompare(e.innerText)<0))),this.hasAttribute("multiple")?(t.hasAttribute("selected")?(this.selections=this.selections.filter((e=>!e.isSameNode(t))),t.removeAttribute("selected")):this.selections.push(t),this._select(this.selections)):(this._hidePopover(),this._select([t])),this.dispatchEvent(new CustomEvent("change"))}else this.open=!0;break;case"Escape":e.preventDefault(),this._hidePopover()}}_handleSlotchange(){for(let e of this.$options.children[0].assignedNodes())e.onclick=e=>this._handleClickOption.bind(this)(e);this._select(this.selections)}_hidePopover(){"inline"===this.getAttribute("filter")&&(this.$button.style.display="",this.$filter.style.display="none"),this.$filter.value="",this.$popover.hidePopover(),document.removeEventListener("click",this._handleClickDocument)}_highlight(e){this.$highlight&&this.$highlight.removeAttribute("highlighted"),null!=e&&(this.$highlight=e,this.$highlight.setAttribute("highlighted",""))}_showPopover(){"inline"===this.getAttribute("filter")&&(this.$button.style.display="none",this.$filter.style.display="");let n="bottom-left";e(this)<this.$popover.offsetHeight+20&&(n="top-left"),this._handleClickDocument=t([this.$popoverContent,this.$contButton],(()=>{this.open=!1})),this.$popover.setAttribute("position",this.getAttribute("position")??n),this.$filter.value="",this.showOptions(),this.$popover.style.visibility="hidden",this.$popover.showPopover();let i=this.$options.getBoundingClientRect().width,o=this.$contButton.getBoundingClientRect().width;o>i&&(this.$options.style.width=o+"px"),this.$popover.style.visibility="",this._highlight(this.selections[0]),this.$filter.focus()}_setButtonText(e){if(this.hasAttribute("slotted")){this.querySelectorAll('[slot="button"]').forEach((e=>e.remove()));for(const t of e){let e=t.cloneNode();e.innerHTML=t.innerHTML,e.slot="button",this.append(e)}}else{let t=e.length>0?e.reduce(((e,t)=>`${e}<span>${t.innerHTML}</span>`),""):'<span class="placeholder">'+this.getAttribute("placeholder")??"</span>";this.$button.innerHTML=t}}_select(e){let t=[];for(let n of this.getOptions())for(let i of e)if(n.isSameNode(i)&&"none"!==i.style.display&&!i.hasAttribute("disabled")){t.push(i);break}if(this.selections.forEach((e=>e.removeAttribute("selected"))),0===t.length){if(this.hasAttribute("multiple"))return this.selections=[],void this._setButtonText([]);for(let e of this.getOptions())if("none"!==e.style.display&&!e.hasAttribute("disabled"))return this._select([e]);return this.selections=[],this.internals.setFormValue(null),void(this.$filter.value="")}this._setButtonText(t),this.selections=t,this.selections.forEach((e=>{e.setAttribute("selected","")})),this.disabled||this.internals.setFormValue(this.value)}}customElements.get("he-select")||customElements.define("he-select",i);export{i as HeliumSelect};
