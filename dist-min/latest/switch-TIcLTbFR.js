const e=new CSSStyleSheet;e.replaceSync('/* The switch - the box around the slider */\r\n\r\n.switch {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: 60px;\r\n    height: 34px;\r\n}\r\n\r\n\r\n/* Hide default HTML checkbox */\r\n\r\n.switch input {\r\n    opacity: 0;\r\n    width: 0;\r\n    height: 0;\r\n}\r\n\r\n\r\n/* The slider */\r\n\r\n.slider {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #ccc;\r\n    -webkit-transition: .4s;\r\n    transition: .4s;\r\n}\r\n\r\n.slider:before {\r\n    position: absolute;\r\n    content: "";\r\n    height: 26px;\r\n    width: 26px;\r\n    left: 4px;\r\n    bottom: 4px;\r\n    background-color: white;\r\n    -webkit-transition: .4s;\r\n    transition: .4s;\r\n}\r\n\r\n:host([checked]) .slider {\r\n    background-color: #2196F3;\r\n}\r\n\r\n:host(:focus) .slider {\r\n    box-shadow: 0 0 1px #2196F3;\r\n}\r\n\r\n:host([checked]) .slider:before {\r\n    -webkit-transform: translateX(26px);\r\n    -ms-transform: translateX(26px);\r\n    transform: translateX(26px);\r\n}\r\n\r\n\r\n/* Rounded sliders */\r\n\r\n.slider.round {\r\n    border-radius: 34px;\r\n}\r\n\r\n.slider.round:before {\r\n    border-radius: 50%;\r\n}');class t extends HTMLElement{static formAssociated=!0;static get observedAttributes(){return["checked"]}$internals;constructor(){super();let t=this.attachShadow({mode:"open"});t.adoptedStyleSheets=[e];let r=document.createElement("div"),n=document.createElement("input"),s=document.createElement("span");n.setAttribute("type","checkbox"),r.append(n),r.append(s),r.classList.add("switch"),s.classList.add("slider"),s.classList.add("round"),t.append(r),this.$internals=this.attachInternals(),this.addEventListener("click",(()=>this.handleClick()))}handleClick(){this.hasAttribute("checked")?(this.removeAttribute("checked"),this.$internals.states.delete("checked"),this.$internals.setFormValue(null)):(this.setAttribute("checked",""),this.$internals.states.add("checked"),this.$internals.setFormValue("on","checked"))}get checked(){return this.$internals.states.has("checked")}}customElements.get("he-switch")||customElements.define("he-switch",t);export{t as HeliumSwitch};
