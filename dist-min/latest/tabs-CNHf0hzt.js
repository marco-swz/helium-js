const e=new CSSStyleSheet;e.replaceSync(" :host {\n     --he-tabs-backgroundColor: white;\n     --he-tabs-color: black;\n     --he-tabs-hover-backgroundColor: lightgrey;\n     --he-tabs-unselected-backgroundColor: whitesmoke;\n     --he-tabs-unselected-color: gray;\n     --he-tabs-height: fit-content;\n\n     display: block;\n     height: var(--he-tabs-height);\n }\n\n :host([variant=pebble]) {\n    & #he-tabs-nav {\n        padding: 10px 0;\n        gap: 5px;\n    }\n\n    & #he-tabs-nav label {\n        color: hsl(240 3.8% 46.1%);\n    }\n\n    & #he-tabs-nav label:has(:checked) {\n        background-color: rgb(228 228 231);\n        border-radius: 4px;\n        color: black;\n    }\n }\n\n :host([variant=pebble-inverted]) {\n    & #he-tabs-nav {\n        padding: 4px;\n        gap: 5px;\n        background-color: #e6e6e6;\n        width: fit-content;\n        border-radius: 8px;\n    }\n\n    & #he-tabs-nav label {\n        color: hsl(240 3.8% 46.1%);\n        border-radius: 4px;\n        font-weight: 600;\n\n        &:hover {\n            transition: color 0.2s;\n            color: black;\n        }\n    }\n\n    & #he-tabs-nav label:has(:checked) {\n        transition:\n            background-color 0.2s,\n            color 0.2s;\n        background-color: white;\n        color: black;\n    }\n }\n\n#he-tabs-content {\n     height: var(--he-tabs-height);\n }\n\n#he-tabs-nav {\n    display: flex;\n}\n\n:host(:not([variant])) {\n    #he-tabs-nav label {\n        color: var(--he-tabs-unselected-color);\n        border-bottom: 3px solid transparent;\n    }\n\n    #he-tabs-nav label:has(:checked) {\n        transition:\n            border-bottom-color 0.2s,\n            color 0.2s;\n        color: var(--he-tabs-color);\n        border-bottom-color: steelblue;\n    }\n\n    #he-tabs-nav label:hover {\n        transition:\n            border-bottom-color 0.2s,\n            color 0.2s;\n        border-bottom: 3px solid var(--he-tabs-hover-backgroundColor);\n    }\n\n    #he-tabs-content {\n        border-top: 1px solid grey;\n    }\n}\n\n#he-tabs-nav label {\n    font-weight: 600;\n    user-select: none;\n    padding: 0.5rem 1rem;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n}\n");class t extends HTMLElement{static observedAttributes=["tab"];$navBar;$slotContent;tabNrSelected;constructor(){super();let t=this.attachShadow({mode:"open"});t.adoptedStyleSheets=[e],t.innerHTML='\n            <nav id="he-tabs-nav">\n            </nav>\n            <div id="he-tabs-content">\n                <slot name="tab"/>\n            </div>\n        ',this.$navBar=t.querySelector("#he-tabs-nav"),this.$slotContent=t.querySelector("slot[name=tab]"),t.addEventListener("slotchange",(e=>this.slotChangeCallback(e,this)))}connectedCallback(){}attributeChangedCallback(e,t,n){if("tab"===e)this.showTab(Number(n))}hideTab(e){this._getTabNav(e).style.display="none",this.tabNrSelected===e&&this._selectFirstVisible()}slotChangeCallback(e,t){const n=e.target;let a=0,o=null;for(const e of n.assignedElements())if("tab"===e.slot){let n=e.hasAttribute("hidden"),l=document.createElement("span"),s=e.getAttribute("title-slot");if(null==s){const t=e.getAttribute("title-text")??`Tab ${a}`;l.innerHTML=t}else{let e=document.createElement("slot");e.name=s,l.append(e)}const r="he-tabs-check"+a;let b=document.createElement("label");b.for=r,n?b.style.display="none":null==o&&(o=a);let i=document.createElement("input");i.id=r,i.type="radio",i.name="he-tabs-idx",i.value=a,i.setAttribute("hidden","true"),i.onchange=e=>t.tabChangeCallback(e),a>0&&(e.style.display="none"),b.append(i),b.append(l),t.$navBar.append(b),a++}null!=o&&t.showTab(t.getAttribute("tab")??o)}showTab(e){const t="#he-tabs-check"+e;let n=this.$navBar.querySelector(t);null!==n&&n.click()}tabChangeCallback(e){const t=e.target,n=Number(t.value);this.children.item(this.tabNrSelected).style.display="none";this.children.item(n).style.display="",this.tabNrSelected=n,this.dispatchEvent(new CustomEvent("change"))}unhideTab(e){this._getTabNav(e).style.display=""}_getTabContent(e){const t="#he-tabs-check"+e;let n=this.$navBar.querySelector(t);if(null==n)throw new Error(`Invalid tab number: ${e}`);return n.parentElement}_getTabNav(e){const t="#he-tabs-check"+e;let n=this.$navBar.querySelector(t);if(null==n)throw new Error(`Invalid tab number: ${e}`);return n.parentElement}_getTabs(){return this.$slotContent.assignedElements()}_selectFirstVisible(){for(let[e,t]of this._getTabs().entries())if(!t.hasAttribute("hidden"))return void this.showTab(e);throw new Error("No tabs visible")}}document.addEventListener("DOMContentLoaded",(function(){customElements.define("he-tabs",t)}));export{t as HeliumTabs};
