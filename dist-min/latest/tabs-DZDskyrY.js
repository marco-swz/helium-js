const e=new CSSStyleSheet;e.replaceSync(" :host {\n     --he-tabs-backgroundColor: white;\n     --he-tabs-color: black;\n     --he-tabs-hover-backgroundColor: lightgrey;\n     --he-tabs-unselected-backgroundColor: whitesmoke;\n     --he-tabs-unselected-color: gray;\n     --he-tabs-height: fit-content;\n\n     display: block;\n     height: var(--he-tabs-height);\n }\n\n :host([variant=pebble]) {\n    & #he-tabs-nav {\n        padding: 10px 0;\n        gap: 5px;\n    }\n\n    & #he-tabs-nav label {\n        color: hsl(240 3.8% 46.1%);\n    }\n\n    & #he-tabs-nav label:has(:checked) {\n        background-color: rgb(228 228 231);\n        border-radius: 4px;\n        color: black;\n    }\n }\n\n :host([variant=pebble-inverted]) {\n    & #he-tabs-nav {\n        padding: 4px;\n        gap: 5px;\n        background-color: #e6e6e6;\n        width: fit-content;\n        border-radius: 8px;\n    }\n\n    & #he-tabs-nav label {\n        color: hsl(240 3.8% 46.1%);\n        border-radius: 4px;\n        font-weight: 600;\n\n        &:hover {\n            transition: color 0.2s;\n            color: black;\n        }\n    }\n\n    & #he-tabs-nav label:has(:checked) {\n        transition:\n            background-color 0.2s,\n            color 0.2s;\n        background-color: white;\n        color: black;\n    }\n }\n\n#he-tabs-content {\n     height: var(--he-tabs-height);\n }\n\n#he-tabs-nav {\n    display: flex;\n}\n\n:host(:not([variant])) {\n    #he-tabs-nav label {\n        color: var(--he-tabs-unselected-color);\n        border-bottom: 3px solid transparent;\n    }\n\n    #he-tabs-nav label:has(:checked) {\n        transition:\n            border-bottom-color 0.2s,\n            color 0.2s;\n        color: var(--he-tabs-color);\n        border-bottom-color: steelblue;\n    }\n\n    #he-tabs-nav label:hover {\n        transition:\n            border-bottom-color 0.2s,\n            color 0.2s;\n        border-bottom: 3px solid var(--he-tabs-hover-backgroundColor);\n    }\n\n    #he-tabs-content {\n        border-top: 1px solid grey;\n    }\n}\n\n#he-tabs-nav label {\n    font-weight: 600;\n    user-select: none;\n    padding: 0.5rem 1rem;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n}\n");class n extends HTMLElement{static observedAttributes=["tab"];$navBar;tabNrSelected;constructor(){super();let n=this.attachShadow({mode:"open"});n.adoptedStyleSheets=[e],n.innerHTML='\n            <nav id="he-tabs-nav">\n            </nav>\n            <div id="he-tabs-content">\n                <slot name="tab"/>\n            </div>\n        ',this.$navBar=n.querySelector("#he-tabs-nav"),n.addEventListener("slotchange",(e=>this.slotChangeCallback(e,this)))}connectedCallback(){}attributeChangedCallback(e,n,t){if("tab"===e)this.showTab(Number(t))}hideTab(e){const n="#he-tabs-check"+e;let t=this.$navBar.querySelector(n);if(null==t)throw new Error(`Invalid tab number: ${e}`);t.parentElement.style.display="none"}slotChangeCallback(e,n){const t=e.target;let a=0;for(const e of t.assignedElements())if("tab"===e.slot){let t=document.createElement("span"),o=e.getAttribute("title-slot");if(null==o){const n=e.getAttribute("title-text")??`Tab ${a}`;t.innerHTML=n}else{let e=document.createElement("slot");e.name=o,t.append(e)}const l="he-tabs-check"+a;let r=document.createElement("label");r.for=l;let s=document.createElement("input");s.id=l,s.type="radio",s.name="he-tabs-idx",s.value=a,s.setAttribute("hidden","true"),s.onchange=e=>n.tabChangeCallback(e),a>0&&(e.style.display="none"),r.append(s),r.append(t),n.$navBar.append(r),a++}n.showTab(n.getAttribute("tab")??0)}showTab(e){const n="#he-tabs-check"+e;let t=this.$navBar.querySelector(n);null!==t&&t.click()}tabChangeCallback(e){const n=e.target,t=Number(n.value);this.children.item(this.tabNrSelected).style.display="none";this.children.item(t).style.display="",this.tabNrSelected=t,this.dispatchEvent(new CustomEvent("change"))}}document.addEventListener("DOMContentLoaded",(function(){customElements.define("he-tabs",n)}));export{n as HeliumTabs};
