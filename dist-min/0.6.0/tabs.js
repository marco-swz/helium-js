const e=new CSSStyleSheet;e.replaceSync("#he-tabs-nav {\n    display: flex;\n}\n\n#he-tabs-nav label {\n    padding: 0.5rem 1rem;\n    cursor: pointer;\n    color: gray;\n    border: 1px solid lightgray;\n    border-bottom: 0;\n    border-top-right-radius: 3px;\n    border-top-left-radius: 3px;\n    background-color: whitesmoke;\n}\n\n#he-tabs-nav label:has(:checked) {\n    color: black;\n    background-color: white;\n    border-bottom: 1px solid white;\n    margin-bottom: -1px;\n}\n\n#he-tabs-nav label:hover {\n    background-color: #0082b40d;\n}\n");class t extends HTMLElement{static observedAttributes=["tab"];navBar;tabNrVisible;constructor(){super();let t=this.attachShadow({mode:"open"});t.adoptedStyleSheets=[e],t.innerHTML='\n            <nav id="he-tabs-nav">\n            </nav>\n            <div id="he-tabs-content">\n                <slot name="tab"/>\n            </div>\n        ',this.navBar=t.querySelector("#he-tabs-nav"),t.addEventListener("slotchange",(e=>this.slotChangeCallback(e,this)))}connectedCallback(){}attributeChangedCallback(e,t,n){if("tab"===e)this.showTab(Number(n))}slotChangeCallback(e,t){const n=e.target;t.navBar.innerHTML="";let a=0;for(const e of n.assignedElements()){const n=e.getAttribute("title-text")??`Tab ${a}`,o="he-tabs-check"+a;let l=document.createElement("label");l.for=o;let r=document.createElement("input");r.id=o,r.type="radio",r.name="he-tabs-idx",r.value=a,r.setAttribute("hidden","true"),r.onchange=e=>t.tabChangeCallback(e),a>0&&(e.style.display="none");let s=document.createElement("span");s.innerHTML=n,l.append(r),l.append(s),t.navBar.append(l),a++}t.showTab(t.getAttribute("tab")??0)}tabChangeCallback(e){const t=e.target,n=Number(t.value);this.children.item(this.tabNrVisible).style.display="none";this.children.item(n).style.display="",this.tabNrVisible=n}showTab(e){const t="#he-tabs-check"+e;let n=this.navBar.querySelector(t);null!==n&&n.click()}}document.addEventListener("DOMContentLoaded",(function(){customElements.define("he-tabs",t)}));export{t as HeliumTabs};
