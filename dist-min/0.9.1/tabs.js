const n=new CSSStyleSheet;n.replaceSync(" :host {\n     --he-tabs-backgroundColor: white;\n     --he-tabs-color: black;\n     --he-tabs-hover-backgroundColor: lightgrey;\n     --he-tabs-unselected-backgroundColor: whitesmoke;\n     --he-tabs-unselected-color: gray;\n\n     display: block;\n }\n\n :host([variant=pebble]) {\n    & #he-tabs-nav {\n        padding: 10px 0;\n        gap: 5px;\n    }\n\n    & #he-tabs-nav label {\n        color: hsl(240 3.8% 46.1%);\n    }\n\n    & #he-tabs-nav label:has(:checked) {\n        background-color: rgb(228 228 231);\n        border-radius: 4px;\n        color: black;\n    }\n }\n\n :host([variant=pebble-inverted]) {\n    & #he-tabs-nav {\n        padding: 4px;\n        gap: 5px;\n        background-color: #e6e6e6;\n        width: fit-content;\n        border-radius: 8px;\n    }\n\n    & #he-tabs-nav label {\n        color: hsl(240 3.8% 46.1%);\n        border-radius: 4px;\n        font-weight: 600;\n\n        &:hover {\n            transition: color 0.2s;\n            color: black;\n        }\n    }\n\n    & #he-tabs-nav label:has(:checked) {\n        transition:\n            background-color 0.2s,\n            color 0.2s;\n        background-color: white;\n        color: black;\n    }\n }\n\n#he-tabs-nav {\n    display: flex;\n}\n\n:host(:not([variant])) {\n    #he-tabs-nav label {\n        color: var(--he-tabs-unselected-color);\n        border-bottom: 3px solid transparent;\n    }\n\n    #he-tabs-nav label:has(:checked) {\n        transition:\n            border-bottom-color 0.2s,\n            color 0.2s;\n        color: var(--he-tabs-color);\n        border-bottom-color: steelblue;\n    }\n\n    #he-tabs-nav label:hover {\n        transition:\n            border-bottom-color 0.2s,\n            color 0.2s;\n        border-bottom: 3px solid var(--he-tabs-hover-backgroundColor);\n    }\n\n    #he-tabs-content {\n        border-top: 1px solid grey;\n    }\n}\n\n#he-tabs-nav label {\n    font-weight: 600;\n    user-select: none;\n    padding: 0.5rem 1rem;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n}\n");class e extends HTMLElement{static observedAttributes=["tab"];navBar;tabNrVisible;constructor(){super();let e=this.attachShadow({mode:"open"});e.adoptedStyleSheets=[n],e.innerHTML='\n            <nav id="he-tabs-nav">\n            </nav>\n            <div id="he-tabs-content">\n                <slot name="tab"/>\n            </div>\n        ',this.navBar=e.querySelector("#he-tabs-nav"),e.addEventListener("slotchange",(n=>this.slotChangeCallback(n,this)))}connectedCallback(){}attributeChangedCallback(n,e,t){if("tab"===n)this.showTab(Number(t))}slotChangeCallback(n,e){const t=n.target;let a=0;for(const n of t.assignedElements())if("tab"===n.slot){let t=document.createElement("span"),o=n.getAttribute("title-slot");if(null==o){const e=n.getAttribute("title-text")??`Tab ${a}`;t.innerHTML=e}else{let n=document.createElement("slot");n.name=o,t.append(n)}const l="he-tabs-check"+a;let r=document.createElement("label");r.for=l;let s=document.createElement("input");s.id=l,s.type="radio",s.name="he-tabs-idx",s.value=a,s.setAttribute("hidden","true"),s.onchange=n=>e.tabChangeCallback(n),a>0&&(n.style.display="none"),r.append(s),r.append(t),e.navBar.append(r),a++}e.showTab(e.getAttribute("tab")??0)}tabChangeCallback(n){const e=n.target,t=Number(e.value);this.children.item(this.tabNrVisible).style.display="none";this.children.item(t).style.display="",this.tabNrVisible=t,this.dispatchEvent(new CustomEvent("change"))}showTab(n){const e="#he-tabs-check"+n;let t=this.navBar.querySelector(e);null!==t&&t.click()}}document.addEventListener("DOMContentLoaded",(function(){customElements.define("he-tabs",e)}));export{e as HeliumTabs};
