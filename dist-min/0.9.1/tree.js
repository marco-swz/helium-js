const e=new CSSStyleSheet;e.replaceSync(':host {\n    display: block;\n    overflow: auto;\n    height: 100%;\n}\n\n.cont-children {\n    padding-left: 20px;\n    position: relative;\n    overflow: hidden;\n    display: block;\n\n    &::before {\n        content: \'\';\n        width: 0;\n        height: 100%;\n        position: absolute;\n        border: 1px solid lightgrey;\n        top: 0;\n        left: 11px;\n    }\n\n    &:hover {\n        &::before {\n            transition: border-color 0.2s;\n            border-color: grey;\n        }\n    }\n}\n\n.list-elem {\n    padding: 8px 10px;\n    cursor: pointer;\n    display: inline-block;\n    width: 100%;\n    width: -moz-available;          /* WebKit-based browsers will ignore this. */\n    width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */\n    width: fill-available;\n    color: black;\n    text-decoration: none;\n    border-radius: 5px;\n    text-wrap: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    \n    &:hover {\n        background-color: whitesmoke;\n    }\n}\n\n.cont-elem[selected] {\n    .list-elem {\n        background-color: whitesmoke;\n    }\n}\n\ndiv[type="root"] {\n    font-weight: 500;\n    display: flex;\n    flex-direction: column;\n\n    & > .list-elem {\n        text-transform: uppercase;\n        \n        &::before {\n            transition: transform 0.1s;\n            font-family: "Font Awesome 5 Pro";\n            content: "\\f105";\n            color: grey;\n            padding-right: 5px;\n            display: inline-block;\n            transform: rotate(90deg) translate(3px, 3px);\n        }\n    }\n}\n\ndiv[type="leaf"] {\n    font-weight: 400;\n    display: flex;\n}\n\ndiv[closed] {\n    & > .cont-children {\n        display: none;\n    }\n\n    & > .list-elem::before {\n        transition: transform 0.1s;\n        transform: rotate(0deg) translate(0, 0);\n    }\n}\n');class t extends HTMLElement{static observedAttributes=[];$contItems;constructor(){super();let t=this.attachShadow({mode:"open"});this.$contItems=document.createElement("div"),this.$contItems.id="cont-items",t.append(this.$contItems),t.adoptedStyleSheets=[e]}attributeChangedCallback(e,t,n){}connectedCallback(){let e=[];for(let t of Array.from(this.children)){let n=this._renderLeaf(t);this.$contItems.append(n),e.push(n)}for(let t of e){const e=t.getAttribute("parent");if(null==e){this.$contItems.append(t);continue}const n=this.$contItems.querySelector("#"+e);if(null==n)throw new Error("No parent found with selector #"+e);if("root"!==n.getAttribute("type")){n.setAttribute("type","root");let e=document.createElement("div");e.classList.add("cont-children"),e.append(t),n.append(e),n.children[0].addEventListener("click",(()=>this._clickRootCallback.bind(this)(n)))}else n.children[1].append(t)}}filter(e){null!=e&&(e=e.toLowerCase());for(const t of this.$contItems.children)this._filterRecursive(t,e,!1);return this}getOpen(){return Array.from(this.$contItems.querySelectorAll("[type=root]:not([closed])")).map((e=>e.id))}getClosed(){return Array.from(this.$contItems.querySelectorAll("[type=root][closed]")).map((e=>e.id))}setClosed(e=null){if(null!=e)for(let t of e){let e=this.$contItems.querySelector("#"+t);if(null==e)throw new Error("No tree node with ID "+t);e.setAttribute("closed","true")}else for(let e of this.$contItems.querySelectorAll("[type=root]"))e.setAttribute("closed","true")}setOpen(e){if(null!=e)for(let t of e){let e=this.$contItems.querySelector("#"+t);if(null==e)throw new Error("No tree node with ID "+t);e.removeAttribute("closed")}else for(let e of this.$contItems.querySelectorAll("[type=root]"))e.removeAttribute("closed")}_filterRecursive(e,t,n){let l=null==t,o=e.getAttribute("filter-text"),r=!1;r=null!=o&&""!==o?o.toLowerCase().includes(t):e.children[0].innerHTML.toLowerCase().includes(t),l||=r;let i=!1;if("root"===e.getAttribute("type")){let o=e.children[1];for(const e of o.children){let o=this._filterRecursive(e,t,l||n);i=i||o}}return i?(e.style.display="",e.removeAttribute("closed")):l?(e.style.display="",e.setAttribute("closed","true")):n?e.style.display="":(e.style.display="none",e.setAttribute("closed","true")),l||i}_clickRootCallback(e){this._toggleChildren(e)}_toggleChildren(e){e.getAttribute("closed")?this._showChildren(e):this._hideChildren(e)}_hideChildren(e){e.setAttribute("closed","true")}_showChildren(e){e.removeAttribute("closed")}_renderLeaf(e){let t=document.createElement("div");const n=e.getAttribute("parent");null!=n&&t.setAttribute("parent",n),null!=e.getAttribute("selected")&&t.setAttribute("selected","");let l=e.getAttribute("filter-text");null!=l&&t.setAttribute("filter-text",l),null!=e.getAttribute("closed")&&t.setAttribute("closed",!0),t.id=e.id,e.slot=e.id,t.classList.add("cont-elem"),e.id="",e.classList.add("list-elem"),t.setAttribute("type","leaf");if(e.hasAttribute("slotted")){let e=document.createElement("slot");e.name=t.id,t.append(e)}else t.append(e);return t}}customElements.get("he-tree")||customElements.define("he-tree",t);export{t as HeliumTree};
