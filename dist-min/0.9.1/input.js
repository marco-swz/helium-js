import{h as t,a as e,b as n}from"./utils-DoExkFin.js";const i=new CSSStyleSheet;i.replaceSync(':host {\n    --he-input-borderColor: lightgrey;\n    --he-input-borderWidth: 1px;\n    --he-input-borderStyle: solid;\n    --he-input-color: black;\n    --he-input-fontSize: 14px;\n    --he-input-backgroundColor: whitesmoke;\n    --he-input-hover-borderColor: grey;\n    --he-input-loading-spinner-color: black;\n\n    display: inline-flex;\n    position: relative;\n    border-radius: 3px;\n    background-color: var(--he-input-backgroundColor);\n    width: 100%;\n    height: 1.6rem;\n    font-size: var(--he-input-fontSize);\n    border-style: var(--he-input-borderStyle);\n    border-color: var(--he-input-borderColor);\n    border-width: var(--he-input-borderWidth);\n    color: var(--he-input-color);\n    cursor: text;\n}\n\n:host(:hover), :host([variant="underline"]:hover) {\n    transition:\n        border-color 0.2s;\n    border-color: var(--he-input-hover-borderColor);\n}\n\n:host([variant="underline"]) {\n    border-top: 0;\n    border-left: 0;\n    border-right: 0;\n    border-radius: 0;\n    border-bottom-color: var(--he-input-borderColor);\n\n}\n\n:host([invalid]) {\n    transition:\n        border-color 0.2s;\n    border-color: indianred;\n}\n\n:host([invalid]:hover) {\n    border-color: indianred;\n}\n\n:host([loading])::after {\n    content: "";\n    position: absolute;\n    width: 12px;\n    height: 12px;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: auto 10px auto auto;\n    border: 3px solid darkgrey;\n    border-radius: 50%;\n    border-bottom-color: var(--he-input-loading-spinner-color);\n    animation: button-loading-spinner 1s ease infinite;\n}\n\n:host([ok]) {\n    border-color: green;\n}\n\n:host([ok])::after {\n    content: "âœ”";\n    position: absolute;\n    width: 10px;\n    height: 15px;\n    color: green;\n    top: 1px;\n    right: 8px;\n    font-weight: 700;\n}\n\n#inp-main {\n    outline: none;\n    background-color: inherit;\n    width: 100%;\n    font-size:inherit;\n    border-radius: inherit;\n    border: none;\n    padding: 0.3rem 0.4rem;\n    cursor: inherit;\n    color: inherit;\n}\n\n:host([readonly]:hover),\n:host([disabled]:hover) {\n    border-color: var(--he-input-borderColor);\n}\n\n:host([readonly]), :host([disabled]) {\n    cursor: default;\n    color: hsl(from var(--he-input-color) h s calc(l + 50))\n}\n\n#cont-options {\n    max-height: 200px;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n::slotted(*) {\n    cursor: pointer;\n    padding: 0px 10px;\n}\n\n::slotted(*:hover) {\n    background-color: hsl(from white h s calc(l - 10));\n}\n\n@keyframes button-loading-spinner {\n    from {\n        transform: rotate(0turn);\n    }\n\n    to {\n        transform: rotate(1turn);\n    }\n}\n\n');const o=new CSSStyleSheet;o.replaceSync("#popover {\n    --he-popover-border-color: hsl(240 5.9% 90%);\n    --he-popover-border-radius: 3px;\n\n    inset: unset;\n    outline: none;\n    border: 1px solid var(--he-popover-border-color);\n    border-radius: var(--he-popover-border-radius);\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n}\n\n");class r extends HTMLElement{static observedAttributes=["attach","position","open,","trigger","anchor","dismiss"];$popover;$attach;$anchor;internals;$ignoreAttributes=!1;constructor(){super();let t=this.attachShadow({mode:"open"});this.$popover=document.createElement("div"),this.$popover.id="popover",this.$popover.popover="";const e=document.createElement("slot");e.name="content",this.$popover.append(e),t.append(this.$popover),t.adoptedStyleSheets=[o],this.internals=this.attachInternals()}set anchor(t){t?this.setAttribute("anchor",t):this.removeAttribute("anchor")}get anchor(){return this.getAttribute("anchor")}set dismiss(t){t?this.setAttribute("dismiss",t):this.removeAttribute("dismiss")}get dismiss(){return this.getAttribute("dismiss")}set anchorElement(t){this.$anchor=t}get anchorElement(){return this.$anchor}set open(t){t?this.$popover.showPopover():this.$popover.hidePopover()}get open(){return null!==this.getAttribute("open")}attributeChangedCallback(t,e,n){if(!this.ignoreAttributes)switch(t){case"open":null==n||"false"===n?this.$popover.hide():this.$popover.show();break;case"attach":if($attach=document.querySelector(n),null==$attach)throw new Error("Attachment element not found!");this._attachToElement($attach);break;case"anchor":const t=document.querySelector(n);if(null==t)throw new Error(`Anchor element "${n}" not found!`);this.$anchor=t;break;case"dismiss":this.$popover.popover=n||""}}connectedCallback(){this.$popover.addEventListener("beforetoggle",(t=>this._beforetoggledPopoverCallback.bind(this)(t))),this.$popover.addEventListener("toggle",(t=>this._toggledPopoverCallback.bind(this)(t)))}toggle(){return this.togglePopover(),this}togglePopover(){return this.$popover.togglePopover(),this}_attachToElement(t){const e=this.getAttribute("trigger")??"click";t.addEventListener(e,(t=>this.triggeredCallback.bind(this)(t))),this.$attach=t}_beforetoggledPopoverCallback(t){this.ignoreAttributes=!0,"open"===t.newState?(this.$popover.style.visibility="hidden",this.setAttribute("open",!0)):this.removeAttribute("open"),this.ignoreAttributes=!1}_toggledPopoverCallback(i){if("open"===i.newState){if(this.internals.states.add("open"),this.$anchor){let n="bottom-left";t(this)<this.$popover.offsetHeight+20&&(n="top-left");const i=this.getAttribute("position")??n;e(this.$popover,this.$anchor,i,3)}this.$popover.style.visibility=""}else this.internals.states.delete("open"),n()}}customElements.get("he-popover")||customElements.define("he-popover",r);class s extends HTMLElement{static formAssociated=!0;static observedAttributes=["pattern","required","report-validity","type","disabled","readonly","autocomplete","placeholder","value","oninput"];$input;$popover;$slot;internals;$options;constructor(){super();let t=this.attachShadow({mode:"open"});this.$input=document.createElement("input"),this.$input.type="text",this.$input.autocomplete="off",this.$input.id="inp-main",this.$options=document.createElement("div"),this.$options.id="cont-options",this.$slot=document.createElement("slot"),this.$slot.name="option",this.$options.append(this.$slot);const e=document.createElement("div");e.slot="content",e.append(this.$options),this.$popover=document.createElement("he-popover"),this.$popover.append(e),this.$popover.dismiss="manual",this.$popover.anchorElement=this,t.append(this.$input),t.append(this.$popover),t.adoptedStyleSheets=[i],this.internals=this.attachInternals(),this.internals.setFormValue("")}set disabled(t){t?this.setAttribute("disabled",!0):this.removeAttribute("disabled")}get disabled(){return null!=this.getAttribute("disabled")}set invalid(t){t?(this.setAttribute("invalid",""),this.internals.states.add("invalid")):(this.removeAttribute("invalid"),this.internals.states.delete("invalid"))}get invalid(){return null!=this.getAttribute("invalid")}set loading(t){t?(this.setAttribute("loading",""),this.internals.states.add("loading")):(this.removeAttribute("loading"),this.internals.states.delete("loading"))}get loading(){return null!=this.getAttribute("loading")}set name(t){t?this.setAttribute("name",t):this.removeAttribute("name")}get name(){return this.getAttribute("name")}set ok(t){t?this.setAttribute("ok",""):this.removeAttribute("ok")}get ok(){return this.getAttribute("ok")}set placeholder(t){t?this.setAttribute("placeholder",t):this.removeAttribute("placeholder")}get placeholder(){return this.getAttribute("placeholder")}set required(t){t?this.setAttribute("required",!0):this.removeAttribute("required")}get required(){return this.$input.required}set type(t){t?this.setAttribute("type",t):this.removeAttribute("type")}get type(){return this.getAttribute("type")}set value(t){this.setAttribute("value",t)}get value(){return""===this.$input.value?this.placeholder??"":this.$input.value}attributeChangedCallback(t,e,n){switch(t){case"type":"hidden"===n?this.style.display="none":"hidden"===e&&(this.style.display=""),n?this.$input.setAttribute(t,n):this.$input.removeAttribute(t);break;case"placeholder":n?(this.$input.setAttribute(t,n),""!==this.value||this.disabled||this.internals.setFormValue(n)):this.$input.removeAttribute(t);break;case"value":this.disabled||this.internals.setFormValue(n??""),null!=n?this.$input.value=n:this.$input.removeAttribute(t);break;case"disabled":null!=n?(this.internals.setFormValue(null),this.internals.states.add("disabled"),this.$input.disabled=!0):(this.internals.setFormValue(this.value),this.internals.states.delete("disabled"),this.$input.disabled=!1);break;case"oninput":this.$input.oninput=this.oninput;break;default:null!=n?this.$input.setAttribute(t,n):this.$input.removeAttribute(t)}}checkValidity(){const t=this.$input.validity;t.valid?this.invalid=!1:this.invalid=!0;const e=this.getAttribute("report-invalid");if(e){console.assert(this.id&&""!==this.id,"The input cannot report its validity if it has no ID");const n="#"+this.id,i=document.querySelectorAll(e);for(const e of i){const i=e.getAttribute("he-input-invalid")??"";let o=new Set(i.split(" "));t.valid?o.delete(n):o.add(n),0!==o.size?e.setAttribute("he-input-invalid",Array.from(o).join(" ")):e.removeAttribute("he-input-invalid")}}return t.valid}clearOptions(){for(const t of this.$slot.assignedElements())t.remove();return this}connectedCallback(){this.$input.addEventListener("change",(()=>this._inputChangedCallback.bind(this)())),this.addEventListener("focus",(()=>this._inputFocusCallback.bind(this)())),this.addEventListener("focusout",(t=>setTimeout((()=>this._inputBlurCallback.bind(this)(t)),200))),this.$slot.onslotchange=()=>this._slotChangedCallback.bind(this)()}focus(){return this.$input.focus(),this}formResetCallback(){this.value="",this.ok=!1,this.invalid=!1}reset(){return this.formResetCallback(),this}select(){return this.$input.select(),this}_inputChangedCallback(){this.disabled||(this.checkValidity()&&this.internals.setFormValue(this.$input.value),this.dispatchEvent(new CustomEvent("change")))}_inputFocusCallback(){this._updatePopover()}_inputBlurCallback(t){if(document.activeElement!==this||document.activeElement!==document.body){this.$popover.open=!1;const t=new CustomEvent("toggle",{detail:{option:null},oldState:"open",newState:"closed"});this.dispatchEvent(t)}}_optionClickedCallback(t){const e=t.target,n=e.value??e.innerHTML;this.value=n,this.$popover.open=!1;const i=new CustomEvent("toggle",{detail:{option:e},oldState:"open",newState:"closed"});this.dispatchEvent(i)}_slotChangedCallback(){for(const t of this.$slot.assignedElements())t.onclick=t=>this._optionClickedCallback.bind(this)(t);this._updatePopover()}_updatePopover(){if(document.activeElement!==this)return;this.$slot.assignedElements().length>0&&(this.$popover.open=!0)}}customElements.get("he-input")||customElements.define("he-input",s);export{s as HeliumInput};
