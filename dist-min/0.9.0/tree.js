const e=new CSSStyleSheet;e.replaceSync("\n");class t extends HTMLElement{static observedAttributes=[];constructor(){super();let t=this.attachShadow({mode:"open"});t.append(this.$slot),t.adoptedStyleSheets=[e]}attributeChangedCallback(e,t,n){}connectedCallback(){let e=[];for(let t of this.children)$e=this._renderLeaf(t),e.push($e);for(let e of this.children){const e=$elem.getAttribute("parent");if(null==e){this._renderLeaf($elem);continue}const t=document.querySelector(e);if(null==t)throw new Error("No parent found with selector "+e);t.isRoot||t.append($elem)}}_renderRoot(e){let t=document.createElement("div");t.class="cont-root",t.append(e);let n=document.createElement("div");t.class="cont-children",t.append(n)}_renderLeaf(){let e=document.createElement("div");e.class="cont-leaf",e.append($elem)}}customElements.get("he-tree")||customElements.define("he-tree",t);export{t as HeliumTree};
